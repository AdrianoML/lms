!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
asyncAccept	/storage/emeric/MesProgs/lms/remote/server/Server.cpp	/^Server::asyncAccept()$/;"	f	language:C++	class:Remote::Server::Server
asyncAccept	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		void asyncAccept();$/;"	p	language:C++	class:Remote::Server::Server
AudioCollectionRequestHandler	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.cpp	/^AudioCollectionRequestHandler::AudioCollectionRequestHandler(DatabaseHandler& db)$/;"	f	language:C++	class:Remote::Server::AudioCollectionRequestHandler
AudioCollectionRequestHandler	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		AudioCollectionRequestHandler(DatabaseHandler& db);$/;"	p	language:C++	class:Remote::Server::AudioCollectionRequestHandler
AudioCollectionRequestHandler	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^class AudioCollectionRequestHandler$/;"	c	language:C++	namespace:Remote::Server
Connection	/storage/emeric/MesProgs/lms/remote/server/Connection.cpp	/^Connection::Connection(boost::asio::ip::tcp::socket socket,$/;"	f	language:C++	class:Remote::Server::Connection
Connection	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		Connection(const Connection&) = delete;$/;"	p	language:C++	class:Remote::Server::Connection
Connection	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		explicit Connection(boost::asio::ip::tcp::socket socket,$/;"	p	language:C++	class:Remote::Server::Connection
Connection	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^class Connection : public std::enable_shared_from_this<Connection>$/;"	c	language:C++	namespace:Remote::Server
ConnectionManager	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.cpp	/^ConnectionManager::ConnectionManager()$/;"	f	language:C++	class:Remote::Server::ConnectionManager
ConnectionManager	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.hpp	/^		ConnectionManager();$/;"	p	language:C++	class:Remote::Server::ConnectionManager
ConnectionManager	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.hpp	/^		ConnectionManager(const ConnectionManager&) = delete;$/;"	p	language:C++	class:Remote::Server::ConnectionManager
ConnectionManager	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.hpp	/^class ConnectionManager$/;"	c	language:C++	namespace:Remote::Server
endpoint_type	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		typedef boost::asio::ip::tcp::endpoint 	endpoint_type;$/;"	t	language:C++	class:Remote::Server::Server
handleAccept	/storage/emeric/MesProgs/lms/remote/server/Server.cpp	/^Server::handleAccept(boost::system::error_code ec)$/;"	f	language:C++	class:Remote::Server::Server
handleAccept	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		void handleAccept(boost::system::error_code ec);$/;"	p	language:C++	class:Remote::Server::Server
handleReadHeader	/storage/emeric/MesProgs/lms/remote/server/Connection.cpp	/^Connection::handleReadHeader(const boost::system::error_code& error, std::size_t bytes_transferred)$/;"	f	language:C++	class:Remote::Server::Connection
handleReadHeader	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		void handleReadHeader(const boost::system::error_code& e,$/;"	p	language:C++	class:Remote::Server::Connection
handleReadMsg	/storage/emeric/MesProgs/lms/remote/server/Connection.cpp	/^Connection::handleReadMsg(const boost::system::error_code& error, std::size_t bytes_transferred)$/;"	f	language:C++	class:Remote::Server::Connection
handleReadMsg	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		void handleReadMsg(const boost::system::error_code& e,$/;"	p	language:C++	class:Remote::Server::Connection
MediaRequestHandler	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.cpp	/^MediaRequestHandler::MediaRequestHandler(DatabaseHandler& db)$/;"	f	language:C++	class:Remote::Server::MediaRequestHandler
MediaRequestHandler	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.hpp	/^		MediaRequestHandler(DatabaseHandler& db);$/;"	p	language:C++	class:Remote::Server::MediaRequestHandler
MediaRequestHandler	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.hpp	/^class MediaRequestHandler$/;"	c	language:C++	namespace:Remote::Server
operator =	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		Connection& operator=(const Connection&) = delete;$/;"	p	language:C++	class:Remote::Server::Connection
operator =	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.hpp	/^		ConnectionManager& operator=(const ConnectionManager&) = delete;$/;"	p	language:C++	class:Remote::Server::ConnectionManager
operator =	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		Server& operator=(const Server&) = delete;$/;"	p	language:C++	class:Remote::Server::Server
pointer	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		typedef std::shared_ptr<Connection> pointer;$/;"	t	language:C++	class:Remote::Server::Connection
process	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.cpp	/^AudioCollectionRequestHandler::process(const AudioCollectionRequest& request, AudioCollectionResponse& response)$/;"	f	language:C++	class:Remote::Server::AudioCollectionRequestHandler
process	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		bool process(const AudioCollectionRequest& request, AudioCollectionResponse& response);$/;"	p	language:C++	class:Remote::Server::AudioCollectionRequestHandler
process	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.cpp	/^MediaRequestHandler::process(const MediaRequest& request, MediaResponse& response)$/;"	f	language:C++	class:Remote::Server::MediaRequestHandler
process	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.hpp	/^		bool process(const MediaRequest& request, MediaResponse& response);$/;"	p	language:C++	class:Remote::Server::MediaRequestHandler
process	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.cpp	/^RequestHandler::process(const ClientMessage& request, ServerMessage& response)$/;"	f	language:C++	class:Remote::Server::RequestHandler
process	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.hpp	/^		bool process(const ClientMessage& request, ServerMessage& response);$/;"	p	language:C++	class:Remote::Server::RequestHandler
processAudioCollectionRequest	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.hpp	/^		bool processAudioCollectionRequest(const AudioCollectionRequest& request, ServerMessage& response);$/;"	p	language:C++	class:Remote::Server::RequestHandler
processAudioPrepare	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.cpp	/^MediaRequestHandler::processAudioPrepare(const MediaRequest::Prepare::Audio& request, MediaResponse& response)$/;"	f	language:C++	class:Remote::Server::MediaRequestHandler
processAudioPrepare	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.hpp	/^		bool processAudioPrepare(const MediaRequest::Prepare::Audio& request, MediaResponse& response);$/;"	p	language:C++	class:Remote::Server::MediaRequestHandler
processGetArtists	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.cpp	/^AudioCollectionRequestHandler::processGetArtists(const AudioCollectionRequest::GetArtistList& request, AudioCollectionResponse::ArtistList& response)$/;"	f	language:C++	class:Remote::Server::AudioCollectionRequestHandler
processGetArtists	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		bool processGetArtists(const AudioCollectionRequest::GetArtistList& request, AudioCollectionResponse::ArtistList& response);$/;"	p	language:C++	class:Remote::Server::AudioCollectionRequestHandler
processGetCoverArt	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.cpp	/^AudioCollectionRequestHandler::processGetCoverArt(const AudioCollectionRequest::GetCoverArt& request, AudioCollectionResponse& response)$/;"	f	language:C++	class:Remote::Server::AudioCollectionRequestHandler
processGetCoverArt	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		bool processGetCoverArt(const AudioCollectionRequest::GetCoverArt& request, AudioCollectionResponse& response);$/;"	p	language:C++	class:Remote::Server::AudioCollectionRequestHandler
processGetGenres	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.cpp	/^AudioCollectionRequestHandler::processGetGenres(const AudioCollectionRequest::GetGenreList& request, AudioCollectionResponse::GenreList& response)$/;"	f	language:C++	class:Remote::Server::AudioCollectionRequestHandler
processGetGenres	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		bool processGetGenres(const AudioCollectionRequest::GetGenreList& request, AudioCollectionResponse::GenreList& response);$/;"	p	language:C++	class:Remote::Server::AudioCollectionRequestHandler
processGetPart	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.cpp	/^MediaRequestHandler::processGetPart(const MediaRequest::GetPart& request, MediaResponse& response)$/;"	f	language:C++	class:Remote::Server::MediaRequestHandler
processGetPart	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.hpp	/^		bool processGetPart(const MediaRequest::GetPart& request, MediaResponse& response);$/;"	p	language:C++	class:Remote::Server::MediaRequestHandler
processGetReleases	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.cpp	/^AudioCollectionRequestHandler::processGetReleases(const AudioCollectionRequest::GetReleaseList& request, AudioCollectionResponse::ReleaseList& response)$/;"	f	language:C++	class:Remote::Server::AudioCollectionRequestHandler
processGetReleases	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		bool processGetReleases(const AudioCollectionRequest::GetReleaseList& request, AudioCollectionResponse::ReleaseList& response);$/;"	p	language:C++	class:Remote::Server::AudioCollectionRequestHandler
processGetTracks	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.cpp	/^AudioCollectionRequestHandler::processGetTracks(const AudioCollectionRequest::GetTrackList& request, AudioCollectionResponse::TrackList& response)$/;"	f	language:C++	class:Remote::Server::AudioCollectionRequestHandler
processGetTracks	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		bool processGetTracks(const AudioCollectionRequest::GetTrackList& request, AudioCollectionResponse::TrackList& response);$/;"	p	language:C++	class:Remote::Server::AudioCollectionRequestHandler
processTerminate	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.cpp	/^MediaRequestHandler::processTerminate(const MediaRequest::Terminate& \/*request*\/, MediaResponse& response)$/;"	f	language:C++	class:Remote::Server::MediaRequestHandler
processTerminate	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.hpp	/^		bool processTerminate(const MediaRequest::Terminate& request, MediaResponse& response);$/;"	p	language:C++	class:Remote::Server::MediaRequestHandler
Remote	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.cpp	/^namespace Remote {$/;"	n	language:C++	file:
Remote	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^namespace Remote {$/;"	n	language:C++
Remote	/storage/emeric/MesProgs/lms/remote/server/Connection.cpp	/^namespace Remote {$/;"	n	language:C++	file:
Remote	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^namespace Remote {$/;"	n	language:C++
Remote	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.cpp	/^namespace Remote {$/;"	n	language:C++	file:
Remote	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.hpp	/^namespace Remote {$/;"	n	language:C++
Remote	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.cpp	/^namespace Remote {$/;"	n	language:C++	file:
Remote	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.hpp	/^namespace Remote {$/;"	n	language:C++
Remote	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.cpp	/^namespace Remote {$/;"	n	language:C++	file:
Remote	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.hpp	/^namespace Remote {$/;"	n	language:C++
Remote	/storage/emeric/MesProgs/lms/remote/server/Server.cpp	/^namespace Remote {$/;"	n	language:C++	file:
Remote	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^namespace Remote {$/;"	n	language:C++
Remote::Server	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.cpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote	file:
Remote::Server	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote
Remote::Server	/storage/emeric/MesProgs/lms/remote/server/Connection.cpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote	file:
Remote::Server	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote
Remote::Server	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.cpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote	file:
Remote::Server	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.hpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote
Remote::Server	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.cpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote	file:
Remote::Server	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.hpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote
Remote::Server	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.cpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote	file:
Remote::Server	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.hpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote
Remote::Server	/storage/emeric/MesProgs/lms/remote/server/Server.cpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote	file:
Remote::Server	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote
Remote::Server::AudioCollectionRequestHandler	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^class AudioCollectionRequestHandler$/;"	c	language:C++	namespace:Remote::Server
Remote::Server::AudioCollectionRequestHandler::AudioCollectionRequestHandler	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.cpp	/^AudioCollectionRequestHandler::AudioCollectionRequestHandler(DatabaseHandler& db)$/;"	f	language:C++	class:Remote::Server::AudioCollectionRequestHandler
Remote::Server::AudioCollectionRequestHandler::AudioCollectionRequestHandler	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		AudioCollectionRequestHandler(DatabaseHandler& db);$/;"	p	language:C++	class:Remote::Server::AudioCollectionRequestHandler
Remote::Server::AudioCollectionRequestHandler::process	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.cpp	/^AudioCollectionRequestHandler::process(const AudioCollectionRequest& request, AudioCollectionResponse& response)$/;"	f	language:C++	class:Remote::Server::AudioCollectionRequestHandler
Remote::Server::AudioCollectionRequestHandler::process	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		bool process(const AudioCollectionRequest& request, AudioCollectionResponse& response);$/;"	p	language:C++	class:Remote::Server::AudioCollectionRequestHandler
Remote::Server::AudioCollectionRequestHandler::processGetArtists	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.cpp	/^AudioCollectionRequestHandler::processGetArtists(const AudioCollectionRequest::GetArtistList& request, AudioCollectionResponse::ArtistList& response)$/;"	f	language:C++	class:Remote::Server::AudioCollectionRequestHandler
Remote::Server::AudioCollectionRequestHandler::processGetArtists	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		bool processGetArtists(const AudioCollectionRequest::GetArtistList& request, AudioCollectionResponse::ArtistList& response);$/;"	p	language:C++	class:Remote::Server::AudioCollectionRequestHandler
Remote::Server::AudioCollectionRequestHandler::processGetCoverArt	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.cpp	/^AudioCollectionRequestHandler::processGetCoverArt(const AudioCollectionRequest::GetCoverArt& request, AudioCollectionResponse& response)$/;"	f	language:C++	class:Remote::Server::AudioCollectionRequestHandler
Remote::Server::AudioCollectionRequestHandler::processGetCoverArt	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		bool processGetCoverArt(const AudioCollectionRequest::GetCoverArt& request, AudioCollectionResponse& response);$/;"	p	language:C++	class:Remote::Server::AudioCollectionRequestHandler
Remote::Server::AudioCollectionRequestHandler::processGetGenres	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.cpp	/^AudioCollectionRequestHandler::processGetGenres(const AudioCollectionRequest::GetGenreList& request, AudioCollectionResponse::GenreList& response)$/;"	f	language:C++	class:Remote::Server::AudioCollectionRequestHandler
Remote::Server::AudioCollectionRequestHandler::processGetGenres	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		bool processGetGenres(const AudioCollectionRequest::GetGenreList& request, AudioCollectionResponse::GenreList& response);$/;"	p	language:C++	class:Remote::Server::AudioCollectionRequestHandler
Remote::Server::AudioCollectionRequestHandler::processGetReleases	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.cpp	/^AudioCollectionRequestHandler::processGetReleases(const AudioCollectionRequest::GetReleaseList& request, AudioCollectionResponse::ReleaseList& response)$/;"	f	language:C++	class:Remote::Server::AudioCollectionRequestHandler
Remote::Server::AudioCollectionRequestHandler::processGetReleases	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		bool processGetReleases(const AudioCollectionRequest::GetReleaseList& request, AudioCollectionResponse::ReleaseList& response);$/;"	p	language:C++	class:Remote::Server::AudioCollectionRequestHandler
Remote::Server::AudioCollectionRequestHandler::processGetTracks	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.cpp	/^AudioCollectionRequestHandler::processGetTracks(const AudioCollectionRequest::GetTrackList& request, AudioCollectionResponse::TrackList& response)$/;"	f	language:C++	class:Remote::Server::AudioCollectionRequestHandler
Remote::Server::AudioCollectionRequestHandler::processGetTracks	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		bool processGetTracks(const AudioCollectionRequest::GetTrackList& request, AudioCollectionResponse::TrackList& response);$/;"	p	language:C++	class:Remote::Server::AudioCollectionRequestHandler
Remote::Server::AudioCollectionRequestHandler::_db	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		DatabaseHandler& _db;$/;"	m	language:C++	class:Remote::Server::AudioCollectionRequestHandler
Remote::Server::AudioCollectionRequestHandler::_maxListArtists	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		static const std::size_t _maxListArtists = 256;$/;"	m	language:C++	class:Remote::Server::AudioCollectionRequestHandler
Remote::Server::AudioCollectionRequestHandler::_maxListGenres	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		static const std::size_t _maxListGenres = 256;$/;"	m	language:C++	class:Remote::Server::AudioCollectionRequestHandler
Remote::Server::AudioCollectionRequestHandler::_maxListReleases	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		static const std::size_t _maxListReleases = 128;$/;"	m	language:C++	class:Remote::Server::AudioCollectionRequestHandler
Remote::Server::AudioCollectionRequestHandler::_maxListTracks	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		static const std::size_t _maxListTracks = 128;$/;"	m	language:C++	class:Remote::Server::AudioCollectionRequestHandler
Remote::Server::Connection	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^class Connection : public std::enable_shared_from_this<Connection>$/;"	c	language:C++	namespace:Remote::Server
Remote::Server::Connection::Connection	/storage/emeric/MesProgs/lms/remote/server/Connection.cpp	/^Connection::Connection(boost::asio::ip::tcp::socket socket,$/;"	f	language:C++	class:Remote::Server::Connection
Remote::Server::Connection::Connection	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		Connection(const Connection&) = delete;$/;"	p	language:C++	class:Remote::Server::Connection
Remote::Server::Connection::Connection	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		explicit Connection(boost::asio::ip::tcp::socket socket,$/;"	p	language:C++	class:Remote::Server::Connection
Remote::Server::Connection::handleReadHeader	/storage/emeric/MesProgs/lms/remote/server/Connection.cpp	/^Connection::handleReadHeader(const boost::system::error_code& error, std::size_t bytes_transferred)$/;"	f	language:C++	class:Remote::Server::Connection
Remote::Server::Connection::handleReadHeader	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		void handleReadHeader(const boost::system::error_code& e,$/;"	p	language:C++	class:Remote::Server::Connection
Remote::Server::Connection::handleReadMsg	/storage/emeric/MesProgs/lms/remote/server/Connection.cpp	/^Connection::handleReadMsg(const boost::system::error_code& error, std::size_t bytes_transferred)$/;"	f	language:C++	class:Remote::Server::Connection
Remote::Server::Connection::handleReadMsg	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		void handleReadMsg(const boost::system::error_code& e,$/;"	p	language:C++	class:Remote::Server::Connection
Remote::Server::Connection::operator =	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		Connection& operator=(const Connection&) = delete;$/;"	p	language:C++	class:Remote::Server::Connection
Remote::Server::Connection::pointer	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		typedef std::shared_ptr<Connection> pointer;$/;"	t	language:C++	class:Remote::Server::Connection
Remote::Server::Connection::socket	/storage/emeric/MesProgs/lms/remote/server/Connection.cpp	/^Connection::socket()$/;"	f	language:C++	class:Remote::Server::Connection
Remote::Server::Connection::socket	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		boost::asio::ip::tcp::socket& socket();$/;"	p	language:C++	class:Remote::Server::Connection
Remote::Server::Connection::start	/storage/emeric/MesProgs/lms/remote/server/Connection.cpp	/^Connection::start()$/;"	f	language:C++	class:Remote::Server::Connection
Remote::Server::Connection::start	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		void start();$/;"	p	language:C++	class:Remote::Server::Connection
Remote::Server::Connection::stop	/storage/emeric/MesProgs/lms/remote/server/Connection.cpp	/^Connection::stop()$/;"	f	language:C++	class:Remote::Server::Connection
Remote::Server::Connection::stop	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		void stop();$/;"	p	language:C++	class:Remote::Server::Connection
Remote::Server::Connection::_closing	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		bool _closing;$/;"	m	language:C++	class:Remote::Server::Connection
Remote::Server::Connection::_connectionManager	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		ConnectionManager& _connectionManager;$/;"	m	language:C++	class:Remote::Server::Connection
Remote::Server::Connection::_inputStreamBuf	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		boost::asio::streambuf _inputStreamBuf;$/;"	m	language:C++	class:Remote::Server::Connection
Remote::Server::Connection::_outputStreamBuf	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		boost::asio::streambuf _outputStreamBuf;$/;"	m	language:C++	class:Remote::Server::Connection
Remote::Server::Connection::_requestHandler	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		RequestHandler& _requestHandler;$/;"	m	language:C++	class:Remote::Server::Connection
Remote::Server::Connection::_socket	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		boost::asio::ip::tcp::socket _socket;$/;"	m	language:C++	class:Remote::Server::Connection
Remote::Server::ConnectionManager	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.hpp	/^class ConnectionManager$/;"	c	language:C++	namespace:Remote::Server
Remote::Server::ConnectionManager::ConnectionManager	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.cpp	/^ConnectionManager::ConnectionManager()$/;"	f	language:C++	class:Remote::Server::ConnectionManager
Remote::Server::ConnectionManager::ConnectionManager	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.hpp	/^		ConnectionManager();$/;"	p	language:C++	class:Remote::Server::ConnectionManager
Remote::Server::ConnectionManager::ConnectionManager	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.hpp	/^		ConnectionManager(const ConnectionManager&) = delete;$/;"	p	language:C++	class:Remote::Server::ConnectionManager
Remote::Server::ConnectionManager::operator =	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.hpp	/^		ConnectionManager& operator=(const ConnectionManager&) = delete;$/;"	p	language:C++	class:Remote::Server::ConnectionManager
Remote::Server::ConnectionManager::start	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.cpp	/^ConnectionManager::start(Connection::pointer c)$/;"	f	language:C++	class:Remote::Server::ConnectionManager
Remote::Server::ConnectionManager::start	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.hpp	/^		void start(Connection::pointer c);$/;"	p	language:C++	class:Remote::Server::ConnectionManager
Remote::Server::ConnectionManager::stop	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.cpp	/^ConnectionManager::stop(Connection::pointer c)$/;"	f	language:C++	class:Remote::Server::ConnectionManager
Remote::Server::ConnectionManager::stop	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.hpp	/^		void stop(Connection::pointer c);$/;"	p	language:C++	class:Remote::Server::ConnectionManager
Remote::Server::ConnectionManager::stopAll	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.cpp	/^ConnectionManager::stopAll()$/;"	f	language:C++	class:Remote::Server::ConnectionManager
Remote::Server::ConnectionManager::stopAll	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.hpp	/^		void stopAll();$/;"	p	language:C++	class:Remote::Server::ConnectionManager
Remote::Server::ConnectionManager::_connections	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.hpp	/^		std::set<Connection::pointer> _connections;$/;"	m	language:C++	class:Remote::Server::ConnectionManager
Remote::Server::MediaRequestHandler	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.hpp	/^class MediaRequestHandler$/;"	c	language:C++	namespace:Remote::Server
Remote::Server::MediaRequestHandler::MediaRequestHandler	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.cpp	/^MediaRequestHandler::MediaRequestHandler(DatabaseHandler& db)$/;"	f	language:C++	class:Remote::Server::MediaRequestHandler
Remote::Server::MediaRequestHandler::MediaRequestHandler	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.hpp	/^		MediaRequestHandler(DatabaseHandler& db);$/;"	p	language:C++	class:Remote::Server::MediaRequestHandler
Remote::Server::MediaRequestHandler::process	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.cpp	/^MediaRequestHandler::process(const MediaRequest& request, MediaResponse& response)$/;"	f	language:C++	class:Remote::Server::MediaRequestHandler
Remote::Server::MediaRequestHandler::process	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.hpp	/^		bool process(const MediaRequest& request, MediaResponse& response);$/;"	p	language:C++	class:Remote::Server::MediaRequestHandler
Remote::Server::MediaRequestHandler::processAudioPrepare	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.cpp	/^MediaRequestHandler::processAudioPrepare(const MediaRequest::Prepare::Audio& request, MediaResponse& response)$/;"	f	language:C++	class:Remote::Server::MediaRequestHandler
Remote::Server::MediaRequestHandler::processAudioPrepare	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.hpp	/^		bool processAudioPrepare(const MediaRequest::Prepare::Audio& request, MediaResponse& response);$/;"	p	language:C++	class:Remote::Server::MediaRequestHandler
Remote::Server::MediaRequestHandler::processGetPart	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.cpp	/^MediaRequestHandler::processGetPart(const MediaRequest::GetPart& request, MediaResponse& response)$/;"	f	language:C++	class:Remote::Server::MediaRequestHandler
Remote::Server::MediaRequestHandler::processGetPart	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.hpp	/^		bool processGetPart(const MediaRequest::GetPart& request, MediaResponse& response);$/;"	p	language:C++	class:Remote::Server::MediaRequestHandler
Remote::Server::MediaRequestHandler::processTerminate	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.cpp	/^MediaRequestHandler::processTerminate(const MediaRequest::Terminate& \/*request*\/, MediaResponse& response)$/;"	f	language:C++	class:Remote::Server::MediaRequestHandler
Remote::Server::MediaRequestHandler::processTerminate	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.hpp	/^		bool processTerminate(const MediaRequest::Terminate& request, MediaResponse& response);$/;"	p	language:C++	class:Remote::Server::MediaRequestHandler
Remote::Server::MediaRequestHandler::_db	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.hpp	/^		DatabaseHandler& _db;$/;"	m	language:C++	class:Remote::Server::MediaRequestHandler
Remote::Server::MediaRequestHandler::_maxPartSize	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.hpp	/^		static const std::size_t _maxPartSize = 65536 - 128;$/;"	m	language:C++	class:Remote::Server::MediaRequestHandler
Remote::Server::MediaRequestHandler::_transcoder	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.hpp	/^		std::shared_ptr<Transcode::AvConvTranscoder>	_transcoder;$/;"	m	language:C++	class:Remote::Server::MediaRequestHandler
Remote::Server::RequestHandler	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.hpp	/^class RequestHandler$/;"	c	language:C++	namespace:Remote::Server
Remote::Server::RequestHandler::process	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.cpp	/^RequestHandler::process(const ClientMessage& request, ServerMessage& response)$/;"	f	language:C++	class:Remote::Server::RequestHandler
Remote::Server::RequestHandler::process	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.hpp	/^		bool process(const ClientMessage& request, ServerMessage& response);$/;"	p	language:C++	class:Remote::Server::RequestHandler
Remote::Server::RequestHandler::processAudioCollectionRequest	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.hpp	/^		bool processAudioCollectionRequest(const AudioCollectionRequest& request, ServerMessage& response);$/;"	p	language:C++	class:Remote::Server::RequestHandler
Remote::Server::RequestHandler::RequestHandler	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.cpp	/^RequestHandler::RequestHandler(boost::filesystem::path dbPath)$/;"	f	language:C++	class:Remote::Server::RequestHandler
Remote::Server::RequestHandler::RequestHandler	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.hpp	/^		RequestHandler(boost::filesystem::path dbPath);$/;"	p	language:C++	class:Remote::Server::RequestHandler
Remote::Server::RequestHandler::_audioCollectionRequestHandler	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.hpp	/^		AudioCollectionRequestHandler	_audioCollectionRequestHandler;$/;"	m	language:C++	class:Remote::Server::RequestHandler
Remote::Server::RequestHandler::_db	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.hpp	/^		DatabaseHandler _db;$/;"	m	language:C++	class:Remote::Server::RequestHandler
Remote::Server::RequestHandler::_mediaRequestHandler	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.hpp	/^		MediaRequestHandler		_mediaRequestHandler;$/;"	m	language:C++	class:Remote::Server::RequestHandler
Remote::Server::Server	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^class Server$/;"	c	language:C++	namespace:Remote::Server
Remote::Server::Server::asyncAccept	/storage/emeric/MesProgs/lms/remote/server/Server.cpp	/^Server::asyncAccept()$/;"	f	language:C++	class:Remote::Server::Server
Remote::Server::Server::asyncAccept	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		void asyncAccept();$/;"	p	language:C++	class:Remote::Server::Server
Remote::Server::Server::endpoint_type	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		typedef boost::asio::ip::tcp::endpoint 	endpoint_type;$/;"	t	language:C++	class:Remote::Server::Server
Remote::Server::Server::handleAccept	/storage/emeric/MesProgs/lms/remote/server/Server.cpp	/^Server::handleAccept(boost::system::error_code ec)$/;"	f	language:C++	class:Remote::Server::Server
Remote::Server::Server::handleAccept	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		void handleAccept(boost::system::error_code ec);$/;"	p	language:C++	class:Remote::Server::Server
Remote::Server::Server::operator =	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		Server& operator=(const Server&) = delete;$/;"	p	language:C++	class:Remote::Server::Server
Remote::Server::Server::run	/storage/emeric/MesProgs/lms/remote/server/Server.cpp	/^Server::run()$/;"	f	language:C++	class:Remote::Server::Server
Remote::Server::Server::run	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		void run();$/;"	p	language:C++	class:Remote::Server::Server
Remote::Server::Server::Server	/storage/emeric/MesProgs/lms/remote/server/Server.cpp	/^Server::Server(boost::asio::io_service& ioService, const endpoint_type& bindEndpoint, boost::filesystem::path dbPath)$/;"	f	language:C++	class:Remote::Server::Server
Remote::Server::Server::Server	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		Server(boost::asio::io_service& ioService, const endpoint_type& bindEndpoint, boost::filesystem::path dbPath);$/;"	p	language:C++	class:Remote::Server::Server
Remote::Server::Server::Server	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		Server(const Server&) = delete;$/;"	p	language:C++	class:Remote::Server::Server
Remote::Server::Server::stop	/storage/emeric/MesProgs/lms/remote/server/Server.cpp	/^Server::stop()$/;"	f	language:C++	class:Remote::Server::Server
Remote::Server::Server::stop	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		void stop();$/;"	p	language:C++	class:Remote::Server::Server
Remote::Server::Server::_acceptor	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		boost::asio::ip::tcp::acceptor _acceptor;$/;"	m	language:C++	class:Remote::Server::Server
Remote::Server::Server::_connectionManager	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		ConnectionManager _connectionManager;$/;"	m	language:C++	class:Remote::Server::Server
Remote::Server::Server::_ioService	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		boost::asio::io_service& _ioService;$/;"	m	language:C++	class:Remote::Server::Server
Remote::Server::Server::_requestHandler	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		RequestHandler _requestHandler;$/;"	m	language:C++	class:Remote::Server::Server
Remote::Server::Server::_socket	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		boost::asio::ip::tcp::socket _socket;$/;"	m	language:C++	class:Remote::Server::Server
REMOTE_AUDIO_COLLECTION_REQUEST_HANDLER	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	2;"	d	language:C++
REMOTE_CONNECTION_HPP	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	2;"	d	language:C++
REMOTE_CONNECTION_MANAGER_HPP	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.hpp	2;"	d	language:C++
REMOTE_MEDIA_REQUEST_HANDLER	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.hpp	2;"	d	language:C++
REMOTE_REQUEST_HANDLER	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.hpp	2;"	d	language:C++
REMOTE_SERVER_HPP	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	2;"	d	language:C++
RequestHandler	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.cpp	/^RequestHandler::RequestHandler(boost::filesystem::path dbPath)$/;"	f	language:C++	class:Remote::Server::RequestHandler
RequestHandler	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.hpp	/^		RequestHandler(boost::filesystem::path dbPath);$/;"	p	language:C++	class:Remote::Server::RequestHandler
RequestHandler	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.hpp	/^class RequestHandler$/;"	c	language:C++	namespace:Remote::Server
run	/storage/emeric/MesProgs/lms/remote/server/Server.cpp	/^Server::run()$/;"	f	language:C++	class:Remote::Server::Server
run	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		void run();$/;"	p	language:C++	class:Remote::Server::Server
Server	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.cpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote	file:
Server	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote
Server	/storage/emeric/MesProgs/lms/remote/server/Connection.cpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote	file:
Server	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote
Server	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.cpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote	file:
Server	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.hpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote
Server	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.cpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote	file:
Server	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.hpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote
Server	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.cpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote	file:
Server	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.hpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote
Server	/storage/emeric/MesProgs/lms/remote/server/Server.cpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote	file:
Server	/storage/emeric/MesProgs/lms/remote/server/Server.cpp	/^Server::Server(boost::asio::io_service& ioService, const endpoint_type& bindEndpoint, boost::filesystem::path dbPath)$/;"	f	language:C++	class:Remote::Server::Server
Server	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		Server(boost::asio::io_service& ioService, const endpoint_type& bindEndpoint, boost::filesystem::path dbPath);$/;"	p	language:C++	class:Remote::Server::Server
Server	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		Server(const Server&) = delete;$/;"	p	language:C++	class:Remote::Server::Server
Server	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^class Server$/;"	c	language:C++	namespace:Remote::Server
Server	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^namespace Server {$/;"	n	language:C++	namespace:Remote
socket	/storage/emeric/MesProgs/lms/remote/server/Connection.cpp	/^Connection::socket()$/;"	f	language:C++	class:Remote::Server::Connection
socket	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		boost::asio::ip::tcp::socket& socket();$/;"	p	language:C++	class:Remote::Server::Connection
start	/storage/emeric/MesProgs/lms/remote/server/Connection.cpp	/^Connection::start()$/;"	f	language:C++	class:Remote::Server::Connection
start	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		void start();$/;"	p	language:C++	class:Remote::Server::Connection
start	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.cpp	/^ConnectionManager::start(Connection::pointer c)$/;"	f	language:C++	class:Remote::Server::ConnectionManager
start	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.hpp	/^		void start(Connection::pointer c);$/;"	p	language:C++	class:Remote::Server::ConnectionManager
stop	/storage/emeric/MesProgs/lms/remote/server/Connection.cpp	/^Connection::stop()$/;"	f	language:C++	class:Remote::Server::Connection
stop	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		void stop();$/;"	p	language:C++	class:Remote::Server::Connection
stop	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.cpp	/^ConnectionManager::stop(Connection::pointer c)$/;"	f	language:C++	class:Remote::Server::ConnectionManager
stop	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.hpp	/^		void stop(Connection::pointer c);$/;"	p	language:C++	class:Remote::Server::ConnectionManager
stop	/storage/emeric/MesProgs/lms/remote/server/Server.cpp	/^Server::stop()$/;"	f	language:C++	class:Remote::Server::Server
stop	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		void stop();$/;"	p	language:C++	class:Remote::Server::Server
stopAll	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.cpp	/^ConnectionManager::stopAll()$/;"	f	language:C++	class:Remote::Server::ConnectionManager
stopAll	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.hpp	/^		void stopAll();$/;"	p	language:C++	class:Remote::Server::ConnectionManager
_acceptor	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		boost::asio::ip::tcp::acceptor _acceptor;$/;"	m	language:C++	class:Remote::Server::Server
_audioCollectionRequestHandler	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.hpp	/^		AudioCollectionRequestHandler	_audioCollectionRequestHandler;$/;"	m	language:C++	class:Remote::Server::RequestHandler
_closing	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		bool _closing;$/;"	m	language:C++	class:Remote::Server::Connection
_connectionManager	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		ConnectionManager& _connectionManager;$/;"	m	language:C++	class:Remote::Server::Connection
_connectionManager	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		ConnectionManager _connectionManager;$/;"	m	language:C++	class:Remote::Server::Server
_connections	/storage/emeric/MesProgs/lms/remote/server/ConnectionManager.hpp	/^		std::set<Connection::pointer> _connections;$/;"	m	language:C++	class:Remote::Server::ConnectionManager
_db	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		DatabaseHandler& _db;$/;"	m	language:C++	class:Remote::Server::AudioCollectionRequestHandler
_db	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.hpp	/^		DatabaseHandler& _db;$/;"	m	language:C++	class:Remote::Server::MediaRequestHandler
_db	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.hpp	/^		DatabaseHandler _db;$/;"	m	language:C++	class:Remote::Server::RequestHandler
_inputStreamBuf	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		boost::asio::streambuf _inputStreamBuf;$/;"	m	language:C++	class:Remote::Server::Connection
_ioService	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		boost::asio::io_service& _ioService;$/;"	m	language:C++	class:Remote::Server::Server
_maxListArtists	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		static const std::size_t _maxListArtists = 256;$/;"	m	language:C++	class:Remote::Server::AudioCollectionRequestHandler
_maxListGenres	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		static const std::size_t _maxListGenres = 256;$/;"	m	language:C++	class:Remote::Server::AudioCollectionRequestHandler
_maxListReleases	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		static const std::size_t _maxListReleases = 128;$/;"	m	language:C++	class:Remote::Server::AudioCollectionRequestHandler
_maxListTracks	/storage/emeric/MesProgs/lms/remote/server/AudioCollectionRequestHandler.hpp	/^		static const std::size_t _maxListTracks = 128;$/;"	m	language:C++	class:Remote::Server::AudioCollectionRequestHandler
_maxPartSize	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.hpp	/^		static const std::size_t _maxPartSize = 65536 - 128;$/;"	m	language:C++	class:Remote::Server::MediaRequestHandler
_mediaRequestHandler	/storage/emeric/MesProgs/lms/remote/server/RequestHandler.hpp	/^		MediaRequestHandler		_mediaRequestHandler;$/;"	m	language:C++	class:Remote::Server::RequestHandler
_outputStreamBuf	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		boost::asio::streambuf _outputStreamBuf;$/;"	m	language:C++	class:Remote::Server::Connection
_requestHandler	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		RequestHandler& _requestHandler;$/;"	m	language:C++	class:Remote::Server::Connection
_requestHandler	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		RequestHandler _requestHandler;$/;"	m	language:C++	class:Remote::Server::Server
_socket	/storage/emeric/MesProgs/lms/remote/server/Connection.hpp	/^		boost::asio::ip::tcp::socket _socket;$/;"	m	language:C++	class:Remote::Server::Connection
_socket	/storage/emeric/MesProgs/lms/remote/server/Server.hpp	/^		boost::asio::ip::tcp::socket _socket;$/;"	m	language:C++	class:Remote::Server::Server
_transcoder	/storage/emeric/MesProgs/lms/remote/server/MediaRequestHandler.hpp	/^		std::shared_ptr<Transcode::AvConvTranscoder>	_transcoder;$/;"	m	language:C++	class:Remote::Server::MediaRequestHandler
